/*
 SPDX-License-Identifier: GPL-2.0-or-later
 myMPD (c) 2018-2020 Juergen Mang <mail@jcgames.de>
 https://github.com/jcorporation/mympd
*/

#ifndef __CONFIG_STRUCT_H__
#define __CONFIG_STRUCT_H__

//Debug build
#cmakedefine DEBUG

//libid3tag
#cmakedefine ENABLE_LIBID3TAG

//flac
#cmakedefine ENABLE_FLAC

//openssl
#cmakedefine ENABLE_SSL

//lua
#cmakedefine ENABLE_LUA

//myMPD version from cmake
#define MYMPD_VERSION_MAJOR ${CPACK_PACKAGE_VERSION_MAJOR}
#define MYMPD_VERSION_MINOR ${CPACK_PACKAGE_VERSION_MINOR}
#define MYMPD_VERSION_PATCH ${CPACK_PACKAGE_VERSION_PATCH}
#define MYMPD_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}"

//default paths
#define DOC_ROOT "${ASSETS_PATH}"
#define ETC_PATH "${ETC_PATH}"
#define VARLIB_PATH "${VARLIB_PATH}"
#define LUALIBS_PATH "${LUALIBS_PATH}"

//defailt navbar icons
#define NAVBAR_ICONS "[{\"ligature\":\"home\",\"title\":\"Home\",\"options\":[\"Home\"],\"badge\":\"\"},"\
    "{\"ligature\":\"equalizer\",\"title\":\"Playback\",\"options\":[\"Playback\"],\"badge\":\"\"},"\
    "{\"ligature\":\"queue_music\",\"title\":\"Queue\",\"options\":[\"Queue\"],\"badge\":\"<span id=\\\"badgeQueueItems\\\" class=\\\"badge badge-secondary\\\"></span>\"},"\
    "{\"ligature\":\"library_music\",\"title\":\"Browse\",\"options\":[\"Browse\"],\"badge\":\"\"},"\
    "{\"ligature\":\"search\",\"title\":\"Search\",\"options\":[\"Search\"],\"badge\":\"\"}]"

enum jukebox_modes {
    JUKEBOX_OFF,
    JUKEBOX_ADD_SONG,
    JUKEBOX_ADD_ALBUM,
};

//myMPD configuration
typedef struct t_config {
    sds mpd_host;
    int mpd_port;
    sds mpd_pass;
    sds http_host;
    sds http_port;
#ifdef ENABLE_SSL
    bool ssl;
    sds ssl_port;
    sds ssl_cert;
    sds ssl_key;
    bool custom_cert;
    sds ssl_san;
    bool redirect;
#endif
    sds user;
    bool stickers;
    bool mixramp;
    sds taglist;
    sds searchtaglist;
    sds browsetaglist;
    bool smartpls;
    sds smartpls_sort;
    sds smartpls_prefix;
    time_t smartpls_interval;
    sds varlibdir;
    int max_elements_per_page;
    bool syscmds;
    bool chroot;
    int last_played_count;
    int loglevel;
    bool love;
    sds love_channel;
    sds love_message;
    sds music_directory;
    sds playlist_directory;
    bool notification_web;
    bool notification_page;
    bool media_session;
    bool auto_play;
    int jukebox_mode;
    sds jukebox_playlist;
    int jukebox_queue_length;
    int jukebox_last_played;
    sds jukebox_unique_tag;
    sds cols_queue_current;
    sds cols_search;
    sds cols_browse_database;
    sds cols_browse_playlists_detail;
    sds cols_browse_filesystem;
    sds cols_playback;
    sds cols_queue_last_played;
    sds cols_queue_jukebox;
    bool localplayer;
    int stream_port;
    sds stream_url;
    bool bg_cover;
    sds bg_color;
    sds bg_css_filter;
    bool coverimage;
    sds coverimage_name;
    int coverimage_size;
    int coverimage_size_small;
    sds locale;
    time_t startup_time;
    bool readonly;
    bool bookmarks;
    int volume_step;
    bool publish;
    bool webdav;
    int covercache_keep_days;
    bool covercache;
    sds theme;
    sds highlight_color;
    bool custom_placeholder_images;
    bool regex;
    bool timer;
    bool sticker_cache;
    sds generate_pls_tags;
    int covergridminsongs;
    sds booklet_name;
    bool mounts;
    bool lyrics;
    bool scripting;
    bool remotescripting;
    sds acl;
    sds scriptacl;
    sds lualibs;
    bool scripteditor;
    bool partitions;
    sds footer_stop;
    bool home;
    unsigned volume_min;
    unsigned volume_max;
    sds vorbis_sylt;
    sds vorbis_uslt;
    sds sylt_ext;
    sds uslt_ext;
    //system commands
    struct list syscmd_list;
} t_config;

#endif
